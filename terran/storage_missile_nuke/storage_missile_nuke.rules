Part : <./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/AephiexStorageMissileNuke"
	ID = aephiex.storage_missile_nuke
	IconNameKey = "Parts/AephiexStorageMissileNukeIcon"
	DescriptionKey = "Parts/AephiexStorageMissileNukeDesc"
	EditorGroup = "Storage"
	SelectionTypeID = &ID
	TypeCategories = [ storage, storageblend, uses_nukes ]

	Resources
	[
		[steel, 18]
	]

	Size = [1, 1]
	MaxHealth = 3000
	ExplosiveDamageAbsorption = 100%
	ExplosiveDamageResistance = 50%
	Flammable = false
	InitialPenetrationResistance = 4
	ContinuingPenetrationResistance = 4
	Density = 1.5
	IsRotateable = true

	IsExternal = true
	IsWalled = false
	IsSelfDestructible = false
	GeneratorRequiresDoor = true

	ReceivableBuffs : ^/0/ReceivableBuffs []
	IgnoreRotationForMirroredSelection = false

	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [32, 32]
	}

	Components : ^/0/Components
	{
		NukeMissileStorage__Aephiex
		{
			Type = TypedResourceGrid
			ResourceType = missile_part_nuke
			GridRect = [0, 0, 1, 1]
			Layer = "doodads_low"
			SpriteInset = 8/64
		}

		ResourceConsumer
		{
			Type = TypedResourceGridConsumer
			ResourceType = missile_part_nuke
			Storage = NukeMissileStorage__Aephiex
			DefaultPriority = &/PRIORITIES/Storage_Supply
		}

		// Forward Proxies
		NextChainProxy_Aephiex
		{
			Type = ResourceStorageProxy
			ResourceType = missile_part_nuke
			PartLocation = [0, -1]
			PartCriteria
			{
				Category = uses_nukes
			}
			ComponentID = NukeMissileStorage__Aephiex
		}
		NextChainProxy_Combined
		{
			Type = ResourceStorageProxy
			ResourceType = missile_part_nuke
			PartLocation = [0, -1]
			PartCriteria
			{
				Category = uses_nukes
			}
			ComponentID = CombinedMissileStorage
		}
		NextChainProxy_Standard
		{
			Type = ResourceStorageProxy
			ResourceType = missile_part_nuke
			PartLocation = [0, -1]
			PartCriteria
			{
				Category = uses_nukes
			}
			ComponentID = MissileStorage
		}

		// Left Proxies
		NextChainProxyLeft_Aephiex
		{
			Type = ResourceStorageProxy
			ResourceType = missile_part_nuke
			PartLocation = [-1, 0]
			PartCriteria
			{
				Category = uses_nukes
			}
			ComponentID = NukeMissileStorage__Aephiex
		}
		NextChainProxyLeft_Combined
		{
			Type = ResourceStorageProxy
			ResourceType = missile_part_nuke
			PartLocation = [-1, 0]
			PartCriteria
			{
				Category = uses_nukes
			}
			ComponentID = CombinedMissileStorage
		}
		NextChainProxyLeft_Standard
		{
			Type = ResourceStorageProxy
			ResourceType = missile_part_nuke
			PartLocation = [-1, 0]
			PartCriteria
			{
				Category = uses_nukes
			}
			ComponentID = MissileStorage
		}

		// Right Proxies
		NextChainProxyRight_Aephiex
		{
			Type = ResourceStorageProxy
			ResourceType = missile_part_nuke
			PartLocation = [1, 0]
			PartCriteria
			{
				Category = uses_nukes
			}
			ComponentID = NukeMissileStorage__Aephiex
		}
		NextChainProxyRight_Combined
		{
			Type = ResourceStorageProxy
			ResourceType = missile_part_nuke
			PartLocation = [1, 0]
			PartCriteria
			{
				Category = uses_nukes
			}
			ComponentID = CombinedMissileStorage
		}
		NextChainProxyRight_Standard
		{
			Type = ResourceStorageProxy
			ResourceType = missile_part_nuke
			PartLocation = [1, 0]
			PartCriteria
			{
				Category = uses_nukes
			}
			ComponentID = MissileStorage
		}

		// Forward Converters
		ResourceConverter_Aephiex
		{
			Type = ResourceConverter
			FromStorage = NukeMissileStorage__Aephiex
			ToStorage = NextChainProxy_Aephiex
			FromQuantity = 1
			ToQuantity = 1
			Interval = 0.1
		}
		ResourceConverter_Combined
		{
			Type = ResourceConverter
			FromStorage = NukeMissileStorage__Aephiex
			ToStorage = NextChainProxy_Combined
			FromQuantity = 1
			ToQuantity = 1
			Interval = 0.1
		}
		ResourceConverter_Standard
		{
			Type = ResourceConverter
			FromStorage = NukeMissileStorage__Aephiex
			ToStorage = NextChainProxy_Standard
			FromQuantity = 1
			ToQuantity = 1
			Interval = 0.1
		}

		// Left Converters
		ResourceConverterLeft_Aephiex
		{
			Type = ResourceConverter
			FromStorage = NukeMissileStorage__Aephiex
			ToStorage = NextChainProxyLeft_Aephiex
			FromQuantity = 1
			ToQuantity = 1
			Interval = 0.1
		}
		ResourceConverterLeft_Combined
		{
			Type = ResourceConverter
			FromStorage = NukeMissileStorage__Aephiex
			ToStorage = NextChainProxyLeft_Combined
			FromQuantity = 1
			ToQuantity = 1
			Interval = 0.1
		}
		ResourceConverterLeft_Standard
		{
			Type = ResourceConverter
			FromStorage = NukeMissileStorage__Aephiex
			ToStorage = NextChainProxyLeft_Standard
			FromQuantity = 1
			ToQuantity = 1
			Interval = 0.1
		}

		// Right Converters
		ResourceConverterRight_Aephiex
		{
			Type = ResourceConverter
			FromStorage = NukeMissileStorage__Aephiex
			ToStorage = NextChainProxyRight_Aephiex
			FromQuantity = 1
			ToQuantity = 1
			Interval = 0.1
		}
		ResourceConverterRight_Combined
		{
			Type = ResourceConverter
			FromStorage = NukeMissileStorage__Aephiex
			ToStorage = NextChainProxyRight_Combined
			FromQuantity = 1
			ToQuantity = 1
			Interval = 0.1
		}
		ResourceConverterRight_Standard
		{
			Type = ResourceConverter
			FromStorage = NukeMissileStorage__Aephiex
			ToStorage = NextChainProxyRight_Standard
			FromQuantity = 1
			ToQuantity = 1
			Interval = 0.1
		}

		Graphics
		{
			Type = Graphics
			Location = [0.5, 0.5]
			Floor
            {
				//Used for the shared conveyour belt images
                Layer = "floors"
                DamageLevels
                [
                    {
                        AnimationFiles
                        [
                            "../floors/floor1.png"
                            "../floors/floor2.png"
                            "../floors/floor3.png"
                            "../floors/floor4.png"
                            "../floors/floor5.png"
                            "../floors/floor6.png"
                            "../floors/floor7.png"
                            "../floors/floor8.png"
                        ]
                        Size = [1, 1]
                        AnimationInterval = .0333
                        AnimationStartTime = Zero
                    }
                ]
			}

			OperationalDoodad
			{
				//used for the icon overlay
				//this layer (-600) is between floor (-700) and storage doodads_low (-500)
                Layer = "turrets"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 1]
					}
				]
            }

			Roof = &<./Data/ships/terran/corridor/corridor.rules>/Part/Components/Graphics/Roof
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/SmallPartDestroyedDry
			Location = [0.5, 0.5]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 1]
		}

		WallsBlend : <../walls/walls.rules>
		{
			Type = BlendSprite
			Location = [.5, .5]
			BlendsWithCategories = [ storageblend ]
		}

		BlueprintWalls : <../walls/blueprintwalls.rules>
		{
			Location = [.5, .5]
			BlendsWithCategories = [ storageblend ]
		}
	}
}